<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:neo4j="http://www.springframework.org/schema/data/neo4j"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/data/neo4j http://www.springframework.org/schema/data/neo4j/spring-neo4j.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<import resource="classpath:launch-context.xml" />
	
	<!-- Properties  -->
	<context:property-placeholder location="classpath:InterBase.properties" />
	
	<!-- XML Marshalling -->
	<bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" >
		<property name="mappingLocation" value="classpath:mapping.xml" />
	</bean>
	
	<bean id="XMLConverter" class="mpg.biochem.de.interbase.util.XMLConverter">
		<property name="marshaller" ref="castorMarshaller" />
		<property name="unmarshaller" ref="castorMarshaller" />
	</bean>
	
	<!-- ServiceHandler -->
	<bean id="serviceHandler" class="mpg.biochem.de.interbase.model.ServiceHandler" init-method="initIt" destroy-method="save">
		<property name="XMLConverter" ref="XMLConverter" />
		<property name="path" value="${path}services/services.xml" />
	</bean>
	
	<!-- PSICQUIC registry client -->
	<bean id="registryClient" class="org.hupo.psi.mi.psicquic.registry.client.registry.DefaultPsicquicRegistryClient"/>
	
	
	<!-- Parent steps -->
	<batch:step id="fetchIntParent">
		<batch:tasklet ref="fetchInteractions"/>
	</batch:step>
	
	<batch:step id="unifyPSMIFilesParent">
		<batch:tasklet>
			<batch:chunk reader="multiReaderWrapper" writer="BIWriter" commit-interval="30000"/>
		    <batch:listeners>
		    	<batch:listener ref="fileNameListener"/>
		    </batch:listeners>
		</batch:tasklet>
	</batch:step>
	
	<batch:step id="mappingsParent">
		<batch:tasklet ref="mapping"/>
	</batch:step>
	
	<batch:step id="createUniprotIndexParent">
		<batch:tasklet task-executor="taskExecutor" throttle-limit="50">
			<batch:chunk reader="gzipItemReader" writer="mappingIndexWriter" commit-interval="10000"></batch:chunk>
		</batch:tasklet>
	</batch:step>
	
	<batch:step id="createNcbiIndexParent">
		<batch:tasklet task-executor="taskExecutor" throttle-limit="50">
			<batch:chunk reader="ncbiGzipItemReader" processor="ncbiProcessor" writer="ncbiMappingIndexWriter" commit-interval="10000"></batch:chunk>
		</batch:tasklet>
	</batch:step>
	
	<batch:step id="mapIdsParent">
		<batch:tasklet>
			<batch:chunk reader="psimiReader" processor="interProcessor" writer="BIWriter2" commit-interval="30000"/>
		</batch:tasklet>
    </batch:step>
    
    <batch:step id="sortParent">
			<batch:tasklet ref="simpleSort"/>
	</batch:step>
	
	<batch:step id="clusterParent">
		<batch:tasklet ref="groupCluster"/>
	</batch:step>
	
	<batch:step id="interactomesParent">
		<batch:tasklet ref="interactomeBuilder"/>
	</batch:step>
	
	<!-- Jobs -->
	<batch:job id="interactions" job-repository="jobRepository">
		<batch:step id="interactions-s1" parent="fetchIntParent"/>
	</batch:job>
	
	<batch:job id="unify" job-repository="jobRepository">
		<batch:step id="unify-s1" parent="unifyPSMIFilesParent"/>
	</batch:job>
	
	<batch:job id="mappings" job-repository="jobRepository">
		<batch:step id="mappings-s1" parent="mappingsParent"/>
	</batch:job>
	
	<batch:job id="uniprotIndex" job-repository="jobRepository">
		<batch:step id="uniprotIndex-s1" parent="createUniprotIndexParent"/>
	</batch:job>
	
	<batch:job id="ncbiIndex" job-repository="jobRepository">
		<batch:step id="ncbiIndex-s1" parent="createNcbiIndexParent"/>
	</batch:job>
	
	<batch:job id="idMapping" job-repository="jobRepository">
		<batch:step id="idMapping-s1" parent="mapIdsParent"/>
	</batch:job>
	
	<batch:job id="sort" job-repository="jobRepository">
		<batch:step id="sort-s1" parent="sortParent"/>
	</batch:job>
	
	<batch:job id="cluster" job-repository="jobRepository">
		<batch:step id="cluster-s1" parent="clusterParent"/>
	</batch:job>
	
	<batch:job id="interactomes" job-repository="jobRepository">
		<batch:step id="interactomes-s1" parent="interactomesParent"/>
	</batch:job>
	
	<batch:job id="mainJob" job-repository="jobRepository">
    	<batch:split id="split1" task-executor="taskExecutor" next="mergeFiles">
	       <batch:flow>
		       <batch:step id="downloadInteractions" parent="fetchIntParent"/>
	       </batch:flow>
	       <batch:flow>
		       <batch:step id="downloadMappings" parent="mappingsParent" next="decision"/>
		       <batch:decision id="decision" decider="indexDecider">
					<batch:next on="CONTINUE" to="uniprotMappingIndex" />
					<batch:next on="SKIP" to="fakeTask" />
	  		   </batch:decision>
	  		   <batch:step id="uniprotMappingIndex" parent="createUniprotIndexParent" next="ncbiMappingIndex"/>
		       <batch:step id ="ncbiMappingIndex" parent="createNcbiIndexParent" next="fakeTask"/>
		       <batch:step id="fakeTask" next="push">
		           <batch:tasklet ref="fake"/>
		       </batch:step>
		       <batch:step id="push"> 
		           <batch:tasklet ref="pushover"/>
		       </batch:step>
	       </batch:flow>
       </batch:split>
      
       <batch:step id="mergeFiles" next="mapIds" parent="unifyPSMIFilesParent"/>
	   
	   <batch:step id="mapIds" parent="mapIdsParent" next="sortFile"/>   	
		
		<batch:step id="sortFile" parent="sortParent" next="clusterFile"/>
		
		<batch:step id="clusterFile" parent="clusterParent" next="createInteractomes"/>
		
		<batch:step id="createInteractomes" parent="interactomesParent"/>
    </batch:job>

    <!-- Tasklets -->
    <bean id="fetchInteractions" class="mpg.biochem.de.interbase.task.FetchInteractionsTasklet">
        <constructor-arg name="registryClient" ref="registryClient"/>
        <constructor-arg name="taskExecutor" ref="taskExecutor" />
		<constructor-arg name="serviceHandler" ref="serviceHandler"/>
    </bean>
	
	<bean id="mapping" class="mpg.biochem.de.interbase.task.DownloadMappingsTasklet"/>
	
	<bean id="fake" class="mpg.biochem.de.interbase.task.FakeTasklet"/>
	
	<bean id="biBeanIoFactory" class="mpg.biochem.de.interbase.batch.BinaryInteractionIoFactory" />
	
	<bean id="simpleSort" class="mpg.biochem.de.interbase.task.FlatFileSortTasklet" scope="step">
		<property name="inputResource">
			<bean class="org.springframework.core.io.FileSystemResource">
				<constructor-arg>
					<bean class="java.io.File">
						<constructor-arg value="${path}data/mapped.tab" />
					</bean>
				</constructor-arg>
			</bean>
		</property>
		<property name="outputResource">
			<bean class="org.springframework.core.io.FileSystemResource">
				<constructor-arg>
					<bean class="java.io.File">
						<constructor-arg value="${path}data/mapped_sorted.tab" />
					</bean>
				</constructor-arg>
			</bean>
		</property>
		<property name="comparator">
			<bean class="mpg.biochem.de.interbase.batch.BinaryInteractionComparator"/>
		</property>
		<property name="inputIoFactory" ref="biBeanIoFactory" />
		<property name="outputIoFactory" ref="biBeanIoFactory" />
		<property name="tmpDirectory">
			<bean class="org.springframework.core.io.FileSystemResource">
				<constructor-arg>
					<bean class="java.io.File">
						<constructor-arg value="." />
					</bean>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	<bean id="groupCluster" class="mpg.biochem.de.interbase.task.GroupClusterTask" scope="step">
		<property name="inputResource">
			<bean class="org.springframework.core.io.FileSystemResource">
				<constructor-arg>
					<bean class="java.io.File">
						<constructor-arg value="${path}data/mapped_sorted.tab" />
					</bean>
				</constructor-arg>
			</bean>
		</property>
		<property name="outputResource">
			<bean class="org.springframework.core.io.FileSystemResource">
				<constructor-arg>
					<bean class="java.io.File">
						<constructor-arg value="${path}data/clustered.tab" />
					</bean>
				</constructor-arg>
			</bean>
		</property>
		<property name="inputIoFactory" ref="biBeanIoFactory" />
		<property name="outputIoFactory" ref="biBeanIoFactory" />
	</bean>
	
	<bean id="interactomeBuilder" class="mpg.biochem.de.interbase.task.InteractomeGeneratorTask" scope="step">
		<property name="inputResource">
			<bean class="org.springframework.core.io.FileSystemResource">
				<constructor-arg>
					<bean class="java.io.File">
						<constructor-arg value="${path}data/clustered.tab" />
					</bean>
				</constructor-arg>
			</bean>
		</property>
		<property name="inputIoFactory" ref="biBeanIoFactory" />
		<property name="outputIoFactory" ref="biBeanIoFactory" />
		<property name="path" value="${path}data/" />
		<property name="organisms" value="${interactome.species}" />
	</bean>
	
	<!-- Readers -->
	
	<!-- Gzip file reader -->
	<bean id="gzipItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="file:${path}mapping/idmapping_selected.tab.gz" />
        <property name="lineMapper">
            <bean class="mpg.biochem.de.interbase.batch.UniprotLineMapper" />
        </property>
        <property name="strict" value="false" />
        <property name="bufferedReaderFactory">
            <bean class="mpg.biochem.de.interbase.batch.GZipBufferedReaderFactory" />
        </property>
    </bean>
    
    <!-- NCBI Gzip file reader -->
	<bean id="ncbiGzipItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="file:${path}mapping/gene2accession.gz" />
        <property name="strict" value="false" />
        <property name="lineMapper">
            <bean class="mpg.biochem.de.interbase.batch.UniprotLineMapper" />
        </property>
        <property name="bufferedReaderFactory">
            <bean class="mpg.biochem.de.interbase.batch.GZipBufferedReaderFactory" />
        </property>
    </bean>
    
    <!-- Multi Reader -->
    <bean id="multiReaderWrapper" class="mpg.biochem.de.interbase.batch.WrappedMrirToGetCurrentResource" scope="step">
		<property name="resources" value="file:${path}services/*.tab" />
		<property name="strict" value="true"/>
		<property name="delegate">
			<bean class="org.springframework.batch.item.file.FlatFileItemReader">
				<property name="lineMapper">
        		    <bean class="mpg.biochem.de.interbase.batch.PSIMITabLineMapper"></bean>
        		</property>
			</bean>
		</property>
	</bean>
    
	<bean id="psimiReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource" value="file:${path}data/unified.tab" />
		<property name="strict" value="true"/>
		<property name="lineMapper">
        	<bean class="mpg.biochem.de.interbase.batch.PSIMITabLineMapper"></bean>
        </property>
	</bean>
	
	<!-- Writers -->
	<!-- Uniprot Mapping Writer -->
	<bean id="mappingIndexWriter" class="mpg.biochem.de.interbase.batch.UniprotMappingIndexWriter" scope="step">
		<constructor-arg name="path" value="${path}mapping/index"/>
	</bean>
	
	<!-- ncbi Mapping Writer -->
	<bean id="ncbiMappingIndexWriter" class="mpg.biochem.de.interbase.batch.NcbiMappingIndexWriter" scope="step">
		<constructor-arg name="path" value="${path}mapping/index"/>
	</bean>
	
	<!-- PSIMITab Writers -->
	<bean id="BIWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="resource" value="file:${path}data/unified.tab" />
		<property name="lineAggregator">
            <bean class="mpg.biochem.de.interbase.batch.PSIMITabLineAgregator"></bean>
        </property>
	</bean>
	
	<bean id="BIWriter2" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="resource" value="file:${path}data/mapped.tab" />
		<property name="lineAggregator">
            <bean class="mpg.biochem.de.interbase.batch.PSIMITabLineAgregator"></bean>
        </property>
	</bean>
	
	<bean id="fileNameListener" class="mpg.biochem.de.interbase.batch.CrossRefListener" scope="step"/>
	
	<!-- Interbase Processor -->
    <bean id="interProcessor" class="mpg.biochem.de.interbase.batch.InterBaseProcessor" scope="step">
    	<constructor-arg name="indexPath" value="${path}mapping/index"/>
    	<constructor-arg name="filePath" value="${path}data/notmapped.tab"/>
    </bean>

	<!-- ncbi Processor -->
    <bean id="ncbiProcessor" class="mpg.biochem.de.interbase.batch.NcbiMappingProcessor" scope="step"/>
    
    <!-- pushover -->
    <bean id="pushover" class="mpg.biochem.de.interbase.task.PushOverMsgTask" scope="step"/>

	<bean id="indexDecider" class="mpg.biochem.de.interbase.batch.IndexDecider"/>
</beans>
